version: 2

jobs:
  build:
    working_directory: ~/user-make
    docker:
      - image: circleci/python:3.6
        environment:
          TEST_REPORTS_DIR: ~/test-reports
    steps:
      - checkout

      - run:
          name: Create required directories
          command: |
             mkdir -p $TEST_REPORTS_DIR ~/.virtualenvs ~/.ssh
             # One needs to concateante here any files that can alter the virtualenv in a way:
             #   - setup.py: for the endpoints installed in $VIRTUAL_ENV/bin
             #   - requirements.txt
             #   - dev-requirements.txt
             # Since we do a develop install of the code itself (cf. the '-e .' in dev-requirments.txt)
             # it does not matter.
             cat tests/requirements.txt tests/requirements.yml > circleci-requirements.txt

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "circleci-requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            if [ -d "${HOME}/.virtualenvs/user-make"  ]
            then
                :
            else
                pushd ~/.virtualenvs
                python -m venv user-make
                popd
                . ~/.virtualenvs/user-make/bin/activate
                pip install --upgrade "pip>=9.0.1"
                pip install --upgrade -r tests/requirements.txt
                ansible-galaxy install -r tests/requirements.yml -p tests/roles
            fi

      - save_cache:
          key: v1-dependency-cache-{{ checksum "circleci-requirements.txt" }}
          paths:
            - ~/.virtualenvs
            - ~/user-make/tests/roles

      - run:
          name: Run tests
          command: |
            . ~/.virtualenvs/user-make/bin/activate
            printf '[defaults]\nroles_path=../\nhost_key_checking=false' >ansible.cfg
            ansible-lint tests/*.yml
            ansible-playbook -i tests/inventory tests/test.yml --syntax-check
            ansible-playbook -i tests/inventory tests/test.yml --connection=local


# vim: et:sw=2:syntax=yaml:ts=2:
